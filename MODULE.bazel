bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "rules_scala", repo_name = "io_bazel_rules_scala")
git_override(
    module_name = "rules_scala",
    commit = "df7cacc81862b76303dbbfcfd59e090e5cd4e194",
    remote = "https://github.com/mbland/rules_scala",
)

register_toolchains("//:custom_scala_toolchain")

scala_config = use_extension(
    "@io_bazel_rules_scala//scala/extensions:config.bzl",
    "scala_config",
)
scala_config.settings(scala_version = "3.3.5")

scala_deps = use_extension(
    "@io_bazel_rules_scala//scala/extensions:deps.bzl",
    "scala_deps",
)
scala_deps.settings(
    fetch_sources = True,
)
scala_deps.toolchains(
    scalatest = True,
)

bazel_dep(name = "rules_jvm_external", version = "6.7")

maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.install(
    artifacts = [
        "com.softwaremill.sttp.tapir:tapir-core_3:1.11.23",
    ],
    fetch_sources = True,
    lock_file = "//:maven_install.json",
    repositories = [
        "https://repo1.maven.org/maven2",
    ],
)
use_repo(maven, "maven")

bazel_dep(name = "rules_pkg", version = "1.0.1")
bazel_dep(name = "rules_oci", version = "2.2.5")

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
oci.pull(
    name = "java_temurin",
    digest = "sha256:44a6b43221053ab8cdac5c634070a0731fb4aab9e629098ed72b026e76ccdab8",  # linux/amd64 manifest digest
    image = "eclipse-temurin",
    tag = "21.0.5_11-jre-noble",
)
use_repo(oci, "java_temurin")
